version: "3.8"

services:
  stellar-scope:
    build:
      context: .
    ports:
      - "8080:1323"
    restart: on-failure
    container_name: astro
    environment:
      - DB_URL=${DB_URL:-postgres://su:su@localhost:5432/postgres?sslmode=disable}
      - MIN_CONNS=${MIN_CONNS:-1}
      - MAX_CONNS=${MAX_CONNS:-3}
      - APOD_ADDRESS=${APOD_ADDRESS:-https://api.nasa.gov/planetary/apod}
      - APOD_API_KEY=${APOD_API_KEY:-uqe4UgO54kToru7pU6PqJDdmlhuMXxpkzEbpHQZV}
      - BUCKET=${BUCKET:-images}
      - REGION=${REGION:-us-east-1}
    networks:
      - astro
    depends_on:
      - minio
      - postgres
  postgres:
    container_name: postgresql
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=su
      - POSTGRES_USER=su
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U su"]
      interval: 5s
      timeout: 1s
      retries: 2
    networks:
      - astro

  minio:
    container_name: minio
    image: minio/minio:latest
    restart: always
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address ":9090" /data
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - ~/minio/data:/data
    networks:
      - astro

volumes:
  postgres:
    name: pg-data

networks:
  astro:
    driver: bridge